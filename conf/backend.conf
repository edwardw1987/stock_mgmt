;[include]
;files = ./celery*.conf

[program:rpcserver]
command=/srv/project/standalone-page/venv/bin/python server.py              ; the program (relative uses PATH, can take args)
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
;numprocs=1                    ; number of processes copies to start (def 1)
directory=/srv/project/standalone-page/rpc               ; directory to cwd to before exec (def no cwd)
;umask=022                     ; umask for process (default None)
;priority=999                  ; the relative start priority (default 999)
autostart=true                ; start at supervisord start (default: true)
;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)
;startretries=3                ; max # of serial start failures when starting (default 3)
;autorestart=unexpected        ; when to restart if exited after running (def: unexpected)
;exitcodes=0,2                 ; 'expected' exit codes used with autorestart (default 0,2)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;stopasgroup=false             ; send stop signal to the UNIX process group (default false)
;killasgroup=false             ; SIGKILL the UNIX process group (def false)
;user=chrism                   ; setuid to this UNIX account to run the program
;redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/srv/project/standalone-page/out.txt        ; stdout log path, NONE for none; default AUTO
;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)
;stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stdout_events_enabled=false   ; emit events on stdout writes (default false)
stderr_logfile=/srv/project/standalone-page/err.txt        ; stderr log path, NONE for none; default AUTO
;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stderr_logfile_backups=10     ; # of stderr logfile backups (default 10)
;stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stderr_events_enabled=false   ; emit events on stderr writes (default false)
;environment=A="1",B="2"       ; process environment additions (def no adds)
;serverurl=AUTO                ; override serverurl computation (childutils)

; ==================================
;  celery worker supervisor example
; ==================================

[program:celery]
; Set full path to celery program if using virtualenv
command=/srv/project/standalone-page/venv/bin/celery worker --uid sysadm -A backend.tasks -E -l INFO

; Alternatively,
;command=celery --app=your_app.celery:app worker --loglevel=INFO -n worker.%%h
; Or run a script
;command=celery.sh

directory=/srv/project/standalone-page
;user=sysadm
numprocs=1
stdout_logfile=/srv/project/standalone-page/logs/worker.log
stderr_logfile=/srv/project/standalone-page/logs/worker.log
autostart=true
autorestart=true
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600

; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true

; Set Celery priority higher than default (999)
; so, if rabbitmq is supervised, it will start first.
priority=1000
; ================================
;  celery beat supervisor example
; ================================

[program:celerybeat]
; Set full path to celery program if using virtualenv
command=/srv/project/standalone-page/venv/bin/celery beat -A backend.tasks --pidfile /var/run/beat.pid -l INFO

; remove the -A myapp argument if you aren't using an app instance

directory=/srv/project/standalone-page
;user=sysadm
numprocs=1
stdout_logfile=/srv/project/standalone-page/logs/beat.log
stderr_logfile=/srv/project/standalone-page/logs/beat.log
autostart=true
autorestart=true
startsecs=10

; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=999

[program:flower]
command=/srv/project/standalone-page/venv/bin/flower --port=1987 --address=0.0.0.0 --broker=redis://127.0.0.1:6379/0 --url_prefix=flower
stdout_logfile=/srv/project/standalone-page/logs/flower.log
stderr_logfile=/srv/project/standalone-page/logs/flower.log
autostart=true
autorestart=true

[program:logstash]
command=/usr/bin/logstash -f /etc/logstash/conf.d --path.data /tmp
stdout_logfile=/srv/project/standalone-page/LS_out.log
stderr_logfile=/srv/project/standalone-page/LS_err.log
autostart=true
autorestart=true

